{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreychen/workspace/react-component-style/src/components/UI/Button/Button.js\";\n// --------------------------------------\n// METHOD 1: using styled-components\n// --------------------------------------\n// import styled from \"styled-components\";\n// 1. we can apply styles directly to the button without specifying the selectors\n// 2. for pseudo class, we use `&` to replace `.button:focus`. & means the class name that will be created by the lib\n// the styled-compnents generates randomly unique class name behind the scence\n// that is how it scopes the style to this component only\n// *** IMPORTANT ***\n// this styled.button returns a REACT COMPONENT which also takes in props\n// const Button = styled.button`\n//   width: 100%;\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n//   &:focus {\n//     outline: none;\n//   }\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n// --------------------------------------\n// METHOD 2: using styled-components\n// --------------------------------------\nimport React from \"react\";\nimport \"./Button.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: props.type,\n    className: \"button\",\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jeffreychen/workspace/react-component-style/src/components/UI/Button/Button.js"],"names":["React","Button","props","type","onClick","children"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAQ,IAAA,IAAI,EAAEA,KAAK,CAACC,IAApB;AAA0B,IAAA,SAAS,EAAC,QAApC;AAA6C,IAAA,OAAO,EAAED,KAAK,CAACE,OAA5D;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMJ,M;AAQN,eAAeA,MAAf","sourcesContent":["// --------------------------------------\n// METHOD 1: using styled-components\n// --------------------------------------\n// import styled from \"styled-components\";\n\n// 1. we can apply styles directly to the button without specifying the selectors\n// 2. for pseudo class, we use `&` to replace `.button:focus`. & means the class name that will be created by the lib\n// the styled-compnents generates randomly unique class name behind the scence\n// that is how it scopes the style to this component only\n// *** IMPORTANT ***\n// this styled.button returns a REACT COMPONENT which also takes in props\n// const Button = styled.button`\n//   width: 100%;\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n\n//   &:focus {\n//     outline: none;\n//   }\n\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n\n// --------------------------------------\n// METHOD 2: using styled-components\n// --------------------------------------\nimport React from \"react\";\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}